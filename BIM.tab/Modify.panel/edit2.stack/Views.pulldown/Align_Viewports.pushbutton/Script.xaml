<?xml version="1.0" encoding="utf-8"?>
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	Title="Views: Find and Replace"
	Height="340"
	Width="550"
	WindowStartupLocation="CenterScreen"
	HorizontalAlignment="Center"
	WindowStyle="None"
	ResizeMode="NoResize"
	Background="#f2f2f2">
	<Window.Resources>
		<ResourceDictionary>
			<Color
				x:Key="ButtonColor1"
				A="0"
				R="124"
				G="111"
				B="44" />
			<SolidColorBrush
				x:Key="header_background"
				Color="#f2f2f2" />
			<SolidColorBrush
				x:Key="main_background"
				Color="#f2f2f2" />
			<SolidColorBrush
				x:Key="checkbox_checked_colour"
				Color="#f2f2f2" />
			<SolidColorBrush
				x:Key="checkbox_unchecked_colour"
				Color="#f2f2f2" />
			<SolidColorBrush
				x:Key="text_header_title"
				Color="Black" />
			<SolidColorBrush
				x:Key="text_header_item"
				Color="Black" />
			<SolidColorBrush
				x:Key="text_white"
				Color="Black" />
			<SolidColorBrush
				x:Key="text_darkblue"
				Color="Black" />
			<SolidColorBrush
				x:Key="text_red"
				Color="Black" />
			<SolidColorBrush
				x:Key="text_magenta"
				Color="Black" />
			<SolidColorBrush
				x:Key="input_box_darkblue"
				Color="#f2f2f2" />
			<SolidColorBrush
				x:Key="border_main"
				Color="Black" />
			<SolidColorBrush
				x:Key="border_secondary"
				Color="Black" />
			<SolidColorBrush
				x:Key="button_01_background_normal"
				Color="#A0A0A0" />
			<SolidColorBrush
				x:Key="button_01_background_hover"
				Color="#B0B0B0" />
			<Style
				x:Key="RepeatButtonTransparent"
				TargetType="{x:Type RepeatButton}">
				<Setter
					Property="OverridesDefaultStyle"
					Value="true" />
				<Setter
					Property="Background"
					Value="#505050" />
				<Setter
					Property="Focusable"
					Value="false" />
				<Setter
					Property="IsTabStop"
					Value="false" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type RepeatButton}">
							<Border
								Background="{TemplateBinding Background}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}"
								CornerRadius="10" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style
				x:Key="ScrollBarThumbVertical"
				TargetType="{x:Type Thumb}">
				<Setter
					Property="OverridesDefaultStyle"
					Value="true" />
				<!--<Setter Property="Margin" Value="3"/>-->
				<Setter
					Property="IsTabStop"
					Value="false" />
				<Setter
					Property="Template">
					<Setter.Value>
						<ControlTemplate
							TargetType="{x:Type Thumb}">
							<Border
								x:Name="rectangle"
								Background="#FF878787"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								CornerRadius="8" />
							<ControlTemplate.Triggers>
								<Trigger
									Property="IsMouseOver"
									Value="true">
									<Setter
										Property="Background"
										TargetName="rectangle"
										Value="#3d3d5c" />
								</Trigger>
								<Trigger
									Property="IsDragging"
									Value="true">
									<Setter
										Property="Background"
										TargetName="rectangle"
										Value="#3d3d5c" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="25"></RowDefinition>
			<RowDefinition
				Height="350"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition></ColumnDefinition>
		</Grid.ColumnDefinitions>
		<Grid
			MouseDown="header_drag"
			Grid.ColumnSpan="2"
			Background="#FFD6D6D6">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="100" />
				<ColumnDefinition />
				<ColumnDefinition
					Width="100" />
			</Grid.ColumnDefinitions>
			<DockPanel
				Grid.Column="0"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Margin="10,0,0,0">
				<TextBlock
					Foreground="#FF515151">
					<Hyperlink
						RequestNavigate="Hyperlink_RequestNavigate"
						FontSize="14px"
						FontWeight="Heavy"
						Foreground="Black">
                        LNQ-TOOL
                    </Hyperlink>
				</TextBlock>
			</DockPanel>
			<TextBlock
				x:Name="main_title"
				Text="__title__"
				Grid.Column="1"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				Foreground="{StaticResource text_header_item}" />
			<Button
				HorizontalAlignment="Right"
				Grid.Column="2"
				Content="Close"
				Foreground="Black"
				FontSize="10"
				FontWeight="Medium"
				Click="button_close"
				Margin="0,0,10,0">
				<Button.Style>
					<Style
						TargetType="Button">
						<Setter
							Property="TextElement.FontFamily"
							Value="Arial" />
						<Setter
							Property="Background"
							Value=" #cc8800" />
						<Setter
							Property="Cursor"
							Value="Hand" />
						<Style.Triggers>
							<Trigger
								Property="IsMouseOver"
								Value="True">
								<Setter
									Property="Background"
									Value="#FF4C70" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
				<Button.Template>
					<ControlTemplate
						TargetType="Button">
						<Border
							Width="60"
							Height="20"
							CornerRadius="8"
							Background="{TemplateBinding Background}">
							<ContentPresenter
								VerticalAlignment="Center"
								HorizontalAlignment="Center" />
						</Border>
					</ControlTemplate>
				</Button.Template>
			</Button>
		</Grid>
		<StackPanel
			Grid.Row="1"
			VerticalAlignment="Top"
			Margin="40">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition
						Height="100" />
					<RowDefinition
						Height="100" />
				</Grid.RowDefinitions>
				<Label
					Content="Select Main Sheet:"
					Margin="0, -25,0,0 "
					Foreground="{StaticResource text_magenta}" />
				<ListBox
					x:Name="test_ListBox"
					MinHeight="100"
					Grid.Row="0"
					Background="{StaticResource header_background}"
					SelectionMode="Single"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					BorderBrush="{StaticResource border_secondary}"
					Foreground="#FFDDDDDD"
					ScrollViewer.HorizontalScrollBarVisibility="Hidden">
					<ListBox.Resources>
						<Style
							TargetType="ScrollBar">
							<Setter
								Property="Background"
								Value="#FFBCBCBC" />
							<Setter
								Property="Foreground"
								Value="#FFBCBCBC" />
							<Setter
								Property="BorderBrush"
								Value="#FFBCBCBC" />
							<Setter
								Property="Opacity"
								Value="0.9" />
							<Setter
								Property="Margin"
								Value="3" />
							<Setter
								Property="Template">
								<Setter.Value>
									<ControlTemplate
										TargetType="{x:Type ScrollBar}">
										<Grid
											x:Name="Bg"
											SnapsToDevicePixels="true">
											<Border
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Grid.Row="1"
												CornerRadius="10" />
											<Track
												x:Name="PART_Track"
												IsDirectionReversed="true"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Grid.Row="1">
												<Track.Thumb>
													<Thumb
														Style="{StaticResource ScrollBarThumbVertical}"
														Margin="2" />
												</Track.Thumb>
											</Track>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style
							TargetType="ListBox">
							<Style.Resources>
								<Style
									TargetType="Border">
									<Setter
										Property="CornerRadius"
										Value="10" />
								</Style>
							</Style.Resources>
						</Style>
					</ListBox.Resources>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<RadioButton
								GroupName="One"
								Background="White"
								Foreground="Black"
								Content="{Binding Name}"
								IsChecked="{Binding IsChecked}" />
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
				<StackPanel
					Grid.Column="0"
					Margin="5,30,5,5"
					Grid.ColumnSpan="2"
					Grid.Row="1">
					<Label
						Content="Settings:"
						Margin="0, -25,0,0 "
						Foreground="{StaticResource text_magenta}" />
					<Border
						Height="60"
						BorderBrush="{DynamicResource border_secondary}"
						BorderThickness="1,1,1,1"
						CornerRadius="10"
						HorizontalAlignment="Stretch"
						Width="Auto">
						<Grid
							Height="62">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="1.5*" />
								<ColumnDefinition
									Width="*" />
							</Grid.ColumnDefinitions>
							<StackPanel
								VerticalAlignment="Center"
								HorizontalAlignment="Center"
								Margin="10"
								Grid.Column="0"
								Orientation="Vertical">
								<CheckBox
									x:Name="UI_checkbox_apply_same_crop"
									Content="Apply same CropBox/ScopeBox"
									IsChecked="True"
									Foreground="Black"
									Background="White"
									VerticalAlignment="Center"
									FontSize="12"
									FontWeight="Medium"
									Margin="0,0,10,0" />
								<CheckBox
									x:Name="UI_checkbox_overlap"
									Content="Overlap multiple ViewPlans (same scale)"
									IsChecked="True"
									Foreground="Black"
									Background="White"
									VerticalAlignment="Center"
									FontSize="12"
									FontWeight="Medium"
									Margin="0,5,10,0" />
							</StackPanel>
							<StackPanel
								VerticalAlignment="Top"
								HorizontalAlignment="Center"
								Margin="10"
								Grid.Column="1"
								Orientation="Vertical">
								<CheckBox
									x:Name="UI_checkbox_align_legend"
									Content="Align Legend(if same)"
									IsChecked="True"
									Foreground="Black"
									Background="White"
									VerticalAlignment="Center"
									FontSize="12"
									FontWeight="Medium"
									Margin="0,5,10,0" />
								<CheckBox
									x:Name="UI_checkbox_apply_same_titleblock"
									Content="Apply same TitleBlock"
									IsChecked="False"
									Foreground="Black"
									Background="White"
									VerticalAlignment="Center"
									FontSize="12"
									FontWeight="Medium"
									Margin="0,5,10,0" />
							</StackPanel>
						</Grid>
					</Border>
				</StackPanel>
			</Grid>
			<Button
				Grid.Column="10"
				Content="Align Viewports"
				Foreground="Black"
				FontSize="14"
				FontWeight="Medium"
				Click="button_run"
				Margin="0,10,0,0"
				Height="40">
				<Button.Style>
					<Style
						TargetType="Button">
						<Setter
							Property="TextElement.FontFamily"
							Value="Arial" />
						<Setter
							Property="Background"
							Value="#FFD6D6D6" />
						<Setter
							Property="Cursor"
							Value="Hand" />
						<Style.Triggers>
							<Trigger
								Property="IsMouseOver"
								Value="True">
								<Setter
									Property="Background"
									Value="#b3b3cc" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
				<Button.Template>
					<ControlTemplate
						TargetType="Button">
						<Border
							Width="200"
							Height="30"
							CornerRadius="8"
							Background="{TemplateBinding Background}">
							<ContentPresenter
								VerticalAlignment="Center"
								HorizontalAlignment="Center" />
						</Border>
					</ControlTemplate>
				</Button.Template>
			</Button>
		</StackPanel>
	</Grid>
</Window>